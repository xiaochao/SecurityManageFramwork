# Generated by Django 2.0.4 on 2018-09-11 17:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, unique=True, verbose_name='属地信息')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assetarea_area', to='RBAC.Area', verbose_name='父级属地')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, unique=True, verbose_name='菜单标题')),
                ('icon', models.CharField(max_length=50, verbose_name='菜单图标')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menu_menu', to='RBAC.Menu', verbose_name='父菜单')),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='权限标题')),
                ('is_menu', models.BooleanField(default=False, verbose_name='菜单显示')),
                ('url', models.CharField(max_length=128)),
                ('menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permission_menu', to='RBAC.Menu', verbose_name='权限菜单')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_num', models.CharField(blank=True, max_length=50, null=True, verbose_name='员工编号')),
                ('title', models.CharField(max_length=50, verbose_name='职位名称')),
                ('telephone', models.CharField(blank=True, max_length=50, null=True, verbose_name='座机号码')),
                ('mobilephone', models.CharField(max_length=50, verbose_name='手机号码')),
                ('description', models.TextField(verbose_name='用户简介')),
                ('error_count', models.IntegerField(default=0, verbose_name='错误登陆')),
                ('lock_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='锁定时间')),
                ('parent_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='上级邮箱')),
                ('area', models.ForeignKey(limit_choices_to={'parent__isnull': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_area', to='RBAC.Area', verbose_name='所属区域')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_parent', to=settings.AUTH_USER_MODEL, verbose_name='上级汇报')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, unique=True, verbose_name='角色名称')),
                ('permissions', models.ManyToManyField(related_name='role_permission', to='RBAC.Permission', verbose_name='权限菜单')),
            ],
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='申请邮箱')),
                ('urlarg', models.CharField(max_length=50, verbose_name='注册参数')),
                ('status', models.CharField(choices=[('0', '待审批'), ('1', '审批通过'), ('2', '审批拒绝')], default='0', max_length=50, verbose_name='审批状态')),
                ('is_check', models.BooleanField(default=False, verbose_name='是否审批')),
                ('is_use', models.BooleanField(default=False, verbose_name='是否使用')),
                ('starttime', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('updatetime', models.DateTimeField(auto_now=True, verbose_name='审批时间')),
                ('action_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='regist_for_actionuser', to=settings.AUTH_USER_MODEL)),
                ('area', models.ForeignKey(limit_choices_to={'parent__isnull': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userrequest_area', to='RBAC.Area', verbose_name='所属区域')),
                ('request_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userrequest_role', to='RBAC.Role', verbose_name='账号权限')),
            ],
        ),
        migrations.CreateModel(
            name='UserResetpsd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='申请邮箱')),
                ('urlarg', models.CharField(max_length=50, verbose_name='重置参数')),
                ('is_check', models.BooleanField(default=False, verbose_name='是否使用')),
                ('updatetime', models.DateField(auto_now=True, verbose_name='更新时间')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='roles',
            field=models.ManyToManyField(related_name='user_role', to='RBAC.Role', verbose_name='所属角色'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
